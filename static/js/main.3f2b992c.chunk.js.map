{"version":3,"sources":["Components/Todo.js","Components/FormTodo.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","index","markTodo","removeTodo","favorite","className","style","textDecoration","isDone","color","isFavorite","text","onClick","FormTodo","addTodo","useState","value","setValue","onSubmit","e","preventDefault","size","type","onChange","target","App","todos","setTodos","newTodos","splice","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAsBeA,MAlBf,YAAgE,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SAC/C,OACE,sBAAKC,UAAU,OAAf,UACE,sBAAMC,MAAO,CAAEC,eAAgBP,EAAKQ,OAAS,eAAiB,GAC/CC,OAAQT,EAAKQ,QAAUR,EAAKU,WAAa,SAAW,SADnE,SAGaV,EAAKW,OAElB,gCACE,wBAAQN,UAAU,UAAWO,QAAS,kBAAMV,EAASD,IAArD,kBACA,wBAAQI,UAAU,SAAWO,QAAS,kBAAMT,EAAWF,IAAvD,oBACA,wBAAQI,UAAU,SAAWO,QAAS,kBAAMR,EAASH,IAArD,6BCQKY,MApBf,YAAgC,IAAZC,EAAW,EAAXA,QAChB,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAUA,OACI,uBAAMC,SATW,SAAAC,GACjBA,EAAEC,iBACGJ,IACLF,EAAQE,GACRC,EAAS,MAKT,UACI,6CACA,uBAAOI,KAAM,KAAKC,KAAK,OAAON,MAAOA,EAAOO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,UAC7E,wBAAQX,UAAU,SAASiB,KAAK,SAAhC,wBCwCGG,MArDf,WACE,MAA0BV,mBAAS,CACjC,CACEJ,KAAM,wBACNH,QAAQ,EACRE,YAAa,KAJjB,mBAAOgB,EAAP,KAAcC,EAAd,KAaMzB,EAAW,SAAAD,GACf,IAAM2B,EAAQ,YAAOF,GACrBE,EAAS3B,GAAOO,QAAS,EACzBmB,EAASC,IAGLzB,EAAa,SAAAF,GACjB,IAAM2B,EAAQ,YAAOF,GACrBE,EAASC,OAAO5B,EAAO,GACvB0B,EAASC,IAGLxB,EAAW,SAAAH,GACf,IAAM2B,EAAQ,YAAOF,GACrBE,EAAS3B,GAAOS,YAAa,EAC7BiB,EAASC,IAIX,OACE,sBAAKvB,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAUS,QA3BE,SAAAH,GACd,IAAMiB,EAAQ,sBAAOF,GAAP,CAAc,CAAEf,UAC9BgB,EAASC,MA0BP,8BACKF,EAAMI,KAAI,SAAC9B,EAAMC,GAAP,OACT,cAAC,EAAD,CAEIA,MAAOA,EACPD,KAAMA,EACNE,SAAUA,EACVC,WAAYA,EACZC,SAAYA,GALPH,YCjCN8B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.3f2b992c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './FormTodo.css' \r\n\r\n\r\nfunction Todo({ todo, index, markTodo, removeTodo, favorite }) {\r\n    return (\r\n      <div className=\"todo\" >\r\n        <span style={{ textDecoration: todo.isDone ? \"line-through\" : \"\" , \r\n                       color: !todo.isDone && todo.isFavorite ? \"yellow\" : \"white\"\r\n                    }}>\r\n                    {todo.text}\r\n        </span>\r\n        <div>\r\n          <button className=\"DoneBtn\"  onClick={() => markTodo(index)}>Done</button>\r\n          <button className=\"DelBtn\"   onClick={() => removeTodo(index)}>Delete</button>\r\n          <button className=\"FavBtn\"   onClick={() => favorite(index)}>Favorite</button>\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Todo\r\n","import { useState } from \"react\";\r\nimport './FormTodo.css' \r\n\r\nfunction FormTodo({ addTodo }) {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!value) return;\r\n        addTodo(value);\r\n        setValue(\"\");\r\n        //    value ? (addTodo(value) , setValue(\"\")) : alert(\"addd\")\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Add Todo</label>\r\n            <input size =\"50\" type=\"text\" value={value} onChange={e => setValue(e.target.value)} />\r\n            <button className=\"subBtn\" type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default FormTodo","import './App.css';\nimport { useState } from 'react';\nimport Todo from './Components/Todo';\nimport FormTodo from './Components/FormTodo';\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {\n      text: \"This is a sample todo\",\n      isDone: false ,\n      isFavorite : false \n    }\n  ]);\n\n  const addTodo = text => {\n    const newTodos = [...todos, { text }];\n    setTodos(newTodos);\n  };\n\n  const markTodo = index => {\n    const newTodos = [...todos];\n    newTodos[index].isDone = true;\n    setTodos(newTodos);\n  };\n\n  const removeTodo = index => {\n    const newTodos = [...todos];\n    newTodos.splice(index, 1);\n    setTodos(newTodos);\n  };\n\n  const favorite = index => {\n    const newTodos = [...todos];\n    newTodos[index].isFavorite = true;\n    setTodos(newTodos);\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>TODO LIST</h1>\n      <FormTodo addTodo={addTodo} />\n      <div>\n          {todos.map((todo, index) => (\n            <Todo \n                key={index}\n                index={index}\n                todo={todo}\n                markTodo={markTodo}\n                removeTodo={removeTodo}\n                favorite = {favorite}\n                />\n          ))}\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}